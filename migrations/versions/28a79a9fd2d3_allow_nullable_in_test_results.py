"""Allow nullable in test_results

Revision ID: 28a79a9fd2d3
Revises: 
Create Date: 2025-09-26 17:48:10.078861

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '28a79a9fd2d3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_results', schema=None) as batch_op:
        batch_op.alter_column('result_time',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('result_value',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('unit_of_measure',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('reference_range',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('result_notes',
               existing_type=mysql.TEXT(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_results', schema=None) as batch_op:
        batch_op.alter_column('result_notes',
               existing_type=mysql.TEXT(),
               nullable=False)
        batch_op.alter_column('reference_range',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('unit_of_measure',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('result_value',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('result_time',
               existing_type=mysql.DATETIME(),
               nullable=False)

    # ### end Alembic commands ###
